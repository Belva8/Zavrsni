This Kotlin code defines the main activity for a pedometer application in an Android environment. Let's break it down:

Package Declaration:

kotlin
Copy code
package com.example.javamaturalni
This statement declares the package where this class resides.

Import Statements:

kotlin
Copy code
import android.content.Intent
import android.os.Bundle
import android.view.View
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat.startActivity
import com.example.kotlinzavrsni.CustomAlgoResultsActivity
import com.example.kotlinzavrsni.R
import com.example.kotlinzavrsni.StepsCounterActivity
import com.example.kotlinzavrsni.StepsHistoryActivity
These statements import necessary classes and modules required for this code. For instance, Intent is used for switching between activities, Bundle for passing data between activities, View for handling UI elements, AppCompatActivity for creating activities, and various activities defined in the project such as StepsCounterActivity, StepsHistoryActivity, and CustomAlgoResultsActivity.

Class Declaration:

kotlin
Copy code
class MainActivity : AppCompatActivity() {
This line declares a class named MainActivity which extends AppCompatActivity. This means that MainActivity is an activity in Android that supports the modern material design theme.

onCreate() Method:

kotlin
Copy code
override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    setContentView(R.layout.activity_main)
}
This method is called when the activity is starting. It sets the layout for the activity from the XML layout resource named activity_main.

navigateToStepCounterActivity() Method:

kotlin
Copy code
fun navigateToStepCounterActivity(v: View) {
    val mIntent = Intent(this, StepsCounterActivity::class.java)
    startActivity(mIntent)
}
This method is called when the user clicks a button or any other UI element with an onClick attribute pointing to this method. It creates an intent to start the StepsCounterActivity and starts that activity.

navigateToStepHistoryActivity() Method:

kotlin
Copy code
fun navigateToStepHistoryActivity(v: View) {
    val mIntent = Intent(this, StepsHistoryActivity::class.java)
    startActivity(mIntent)
}
Similar to the previous method, this one starts the StepsHistoryActivity when called.

navigateToCustomAlgoActivity() Method:

kotlin
Copy code
fun navigateToCustomAlgoActivity(v: View) {
    val mIntent = Intent(this, CustomAlgoResultsActivity::class.java)
    startActivity(mIntent)
}
Again, similar to the previous methods, this one starts the CustomAlgoResultsActivity when called.

These methods are likely invoked by UI elements in the activity_main.xml layout file when users interact with the app, such as clicking buttons or selecting items from a menu.